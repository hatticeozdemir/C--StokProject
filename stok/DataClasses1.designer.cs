#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stok
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="STOK")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStok_TelMarka(Stok_TelMarka instance);
    partial void UpdateStok_TelMarka(Stok_TelMarka instance);
    partial void DeleteStok_TelMarka(Stok_TelMarka instance);
    partial void InsertStok_TelModel(Stok_TelModel instance);
    partial void UpdateStok_TelModel(Stok_TelModel instance);
    partial void DeleteStok_TelModel(Stok_TelModel instance);
    partial void InsertStok_TelParca(Stok_TelParca instance);
    partial void UpdateStok_TelParca(Stok_TelParca instance);
    partial void DeleteStok_TelParca(Stok_TelParca instance);
    partial void InsertStok_PcMarka(Stok_PcMarka instance);
    partial void UpdateStok_PcMarka(Stok_PcMarka instance);
    partial void DeleteStok_PcMarka(Stok_PcMarka instance);
    partial void InsertStok_PcModel(Stok_PcModel instance);
    partial void UpdateStok_PcModel(Stok_PcModel instance);
    partial void DeleteStok_PcModel(Stok_PcModel instance);
    partial void InsertStok_PcParca(Stok_PcParca instance);
    partial void UpdateStok_PcParca(Stok_PcParca instance);
    partial void DeleteStok_PcParca(Stok_PcParca instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::stok.Properties.Settings.Default.STOKConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Stok_TelMarka> Stok_TelMarka
		{
			get
			{
				return this.GetTable<Stok_TelMarka>();
			}
		}
		
		public System.Data.Linq.Table<Stok_TelModel> Stok_TelModel
		{
			get
			{
				return this.GetTable<Stok_TelModel>();
			}
		}
		
		public System.Data.Linq.Table<Stok_TelParca> Stok_TelParca
		{
			get
			{
				return this.GetTable<Stok_TelParca>();
			}
		}
		
		public System.Data.Linq.Table<Stok_PcMarka> Stok_PcMarka
		{
			get
			{
				return this.GetTable<Stok_PcMarka>();
			}
		}
		
		public System.Data.Linq.Table<Stok_PcModel> Stok_PcModel
		{
			get
			{
				return this.GetTable<Stok_PcModel>();
			}
		}
		
		public System.Data.Linq.Table<Stok_PcParca> Stok_PcParca
		{
			get
			{
				return this.GetTable<Stok_PcParca>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_TelMarka")]
	public partial class Stok_TelMarka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stok_MarkaID;
		
		private string _Stok_MarkaAdi;
		
		private string _Stok_KayıtYapan;
		
		private EntitySet<Stok_TelModel> _Stok_TelModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStok_MarkaIDChanging(int value);
    partial void OnStok_MarkaIDChanged();
    partial void OnStok_MarkaAdiChanging(string value);
    partial void OnStok_MarkaAdiChanged();
    partial void OnStok_KayıtYapanChanging(string value);
    partial void OnStok_KayıtYapanChanged();
    #endregion
		
		public Stok_TelMarka()
		{
			this._Stok_TelModel = new EntitySet<Stok_TelModel>(new Action<Stok_TelModel>(this.attach_Stok_TelModel), new Action<Stok_TelModel>(this.detach_Stok_TelModel));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_MarkaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stok_MarkaID
		{
			get
			{
				return this._Stok_MarkaID;
			}
			set
			{
				if ((this._Stok_MarkaID != value))
				{
					this.OnStok_MarkaIDChanging(value);
					this.SendPropertyChanging();
					this._Stok_MarkaID = value;
					this.SendPropertyChanged("Stok_MarkaID");
					this.OnStok_MarkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_MarkaAdi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_MarkaAdi
		{
			get
			{
				return this._Stok_MarkaAdi;
			}
			set
			{
				if ((this._Stok_MarkaAdi != value))
				{
					this.OnStok_MarkaAdiChanging(value);
					this.SendPropertyChanging();
					this._Stok_MarkaAdi = value;
					this.SendPropertyChanged("Stok_MarkaAdi");
					this.OnStok_MarkaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_KayıtYapan", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_KayıtYapan
		{
			get
			{
				return this._Stok_KayıtYapan;
			}
			set
			{
				if ((this._Stok_KayıtYapan != value))
				{
					this.OnStok_KayıtYapanChanging(value);
					this.SendPropertyChanging();
					this._Stok_KayıtYapan = value;
					this.SendPropertyChanged("Stok_KayıtYapan");
					this.OnStok_KayıtYapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_TelMarka_Stok_TelModel", Storage="_Stok_TelModel", ThisKey="Stok_MarkaID", OtherKey="Stok_TelMarkaID")]
		public EntitySet<Stok_TelModel> Stok_TelModel
		{
			get
			{
				return this._Stok_TelModel;
			}
			set
			{
				this._Stok_TelModel.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stok_TelModel(Stok_TelModel entity)
		{
			this.SendPropertyChanging();
			entity.Stok_TelMarka = this;
		}
		
		private void detach_Stok_TelModel(Stok_TelModel entity)
		{
			this.SendPropertyChanging();
			entity.Stok_TelMarka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_TelModel")]
	public partial class Stok_TelModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stok_ModelID;
		
		private string _Stok_ModelAdı;
		
		private string _Stok_ModelYear;
		
		private string _Stok_KayıtYapan;
		
		private System.Nullable<int> _Stok_TelMarkaID;
		
		private EntitySet<Stok_TelParca> _Stok_TelParca;
		
		private EntityRef<Stok_TelMarka> _Stok_TelMarka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStok_ModelIDChanging(int value);
    partial void OnStok_ModelIDChanged();
    partial void OnStok_ModelAdıChanging(string value);
    partial void OnStok_ModelAdıChanged();
    partial void OnStok_ModelYearChanging(string value);
    partial void OnStok_ModelYearChanged();
    partial void OnStok_KayıtYapanChanging(string value);
    partial void OnStok_KayıtYapanChanged();
    partial void OnStok_TelMarkaIDChanging(System.Nullable<int> value);
    partial void OnStok_TelMarkaIDChanged();
    #endregion
		
		public Stok_TelModel()
		{
			this._Stok_TelParca = new EntitySet<Stok_TelParca>(new Action<Stok_TelParca>(this.attach_Stok_TelParca), new Action<Stok_TelParca>(this.detach_Stok_TelParca));
			this._Stok_TelMarka = default(EntityRef<Stok_TelMarka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stok_ModelID
		{
			get
			{
				return this._Stok_ModelID;
			}
			set
			{
				if ((this._Stok_ModelID != value))
				{
					this.OnStok_ModelIDChanging(value);
					this.SendPropertyChanging();
					this._Stok_ModelID = value;
					this.SendPropertyChanged("Stok_ModelID");
					this.OnStok_ModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ModelAdı", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_ModelAdı
		{
			get
			{
				return this._Stok_ModelAdı;
			}
			set
			{
				if ((this._Stok_ModelAdı != value))
				{
					this.OnStok_ModelAdıChanging(value);
					this.SendPropertyChanging();
					this._Stok_ModelAdı = value;
					this.SendPropertyChanged("Stok_ModelAdı");
					this.OnStok_ModelAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ModelYear", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_ModelYear
		{
			get
			{
				return this._Stok_ModelYear;
			}
			set
			{
				if ((this._Stok_ModelYear != value))
				{
					this.OnStok_ModelYearChanging(value);
					this.SendPropertyChanging();
					this._Stok_ModelYear = value;
					this.SendPropertyChanged("Stok_ModelYear");
					this.OnStok_ModelYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_KayıtYapan", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_KayıtYapan
		{
			get
			{
				return this._Stok_KayıtYapan;
			}
			set
			{
				if ((this._Stok_KayıtYapan != value))
				{
					this.OnStok_KayıtYapanChanging(value);
					this.SendPropertyChanging();
					this._Stok_KayıtYapan = value;
					this.SendPropertyChanged("Stok_KayıtYapan");
					this.OnStok_KayıtYapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_TelMarkaID", DbType="Int")]
		public System.Nullable<int> Stok_TelMarkaID
		{
			get
			{
				return this._Stok_TelMarkaID;
			}
			set
			{
				if ((this._Stok_TelMarkaID != value))
				{
					if (this._Stok_TelMarka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStok_TelMarkaIDChanging(value);
					this.SendPropertyChanging();
					this._Stok_TelMarkaID = value;
					this.SendPropertyChanged("Stok_TelMarkaID");
					this.OnStok_TelMarkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_TelModel_Stok_TelParca", Storage="_Stok_TelParca", ThisKey="Stok_ModelID", OtherKey="Stok_ModelID")]
		public EntitySet<Stok_TelParca> Stok_TelParca
		{
			get
			{
				return this._Stok_TelParca;
			}
			set
			{
				this._Stok_TelParca.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_TelMarka_Stok_TelModel", Storage="_Stok_TelMarka", ThisKey="Stok_TelMarkaID", OtherKey="Stok_MarkaID", IsForeignKey=true)]
		public Stok_TelMarka Stok_TelMarka
		{
			get
			{
				return this._Stok_TelMarka.Entity;
			}
			set
			{
				Stok_TelMarka previousValue = this._Stok_TelMarka.Entity;
				if (((previousValue != value) 
							|| (this._Stok_TelMarka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stok_TelMarka.Entity = null;
						previousValue.Stok_TelModel.Remove(this);
					}
					this._Stok_TelMarka.Entity = value;
					if ((value != null))
					{
						value.Stok_TelModel.Add(this);
						this._Stok_TelMarkaID = value.Stok_MarkaID;
					}
					else
					{
						this._Stok_TelMarkaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stok_TelMarka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stok_TelParca(Stok_TelParca entity)
		{
			this.SendPropertyChanging();
			entity.Stok_TelModel = this;
		}
		
		private void detach_Stok_TelParca(Stok_TelParca entity)
		{
			this.SendPropertyChanging();
			entity.Stok_TelModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_TelParca")]
	public partial class Stok_TelParca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stok_ParcaID;
		
		private string _Stok_ParcaAdi;
		
		private System.Nullable<int> _Stok_ParcaAdet;
		
		private string _Stok_KayıtYapan;
		
		private System.Nullable<int> _Stok_ModelID;
		
		private EntityRef<Stok_TelModel> _Stok_TelModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStok_ParcaIDChanging(int value);
    partial void OnStok_ParcaIDChanged();
    partial void OnStok_ParcaAdiChanging(string value);
    partial void OnStok_ParcaAdiChanged();
    partial void OnStok_ParcaAdetChanging(System.Nullable<int> value);
    partial void OnStok_ParcaAdetChanged();
    partial void OnStok_KayıtYapanChanging(string value);
    partial void OnStok_KayıtYapanChanged();
    partial void OnStok_ModelIDChanging(System.Nullable<int> value);
    partial void OnStok_ModelIDChanged();
    #endregion
		
		public Stok_TelParca()
		{
			this._Stok_TelModel = default(EntityRef<Stok_TelModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ParcaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stok_ParcaID
		{
			get
			{
				return this._Stok_ParcaID;
			}
			set
			{
				if ((this._Stok_ParcaID != value))
				{
					this.OnStok_ParcaIDChanging(value);
					this.SendPropertyChanging();
					this._Stok_ParcaID = value;
					this.SendPropertyChanged("Stok_ParcaID");
					this.OnStok_ParcaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ParcaAdi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_ParcaAdi
		{
			get
			{
				return this._Stok_ParcaAdi;
			}
			set
			{
				if ((this._Stok_ParcaAdi != value))
				{
					this.OnStok_ParcaAdiChanging(value);
					this.SendPropertyChanging();
					this._Stok_ParcaAdi = value;
					this.SendPropertyChanged("Stok_ParcaAdi");
					this.OnStok_ParcaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ParcaAdet", DbType="Int")]
		public System.Nullable<int> Stok_ParcaAdet
		{
			get
			{
				return this._Stok_ParcaAdet;
			}
			set
			{
				if ((this._Stok_ParcaAdet != value))
				{
					this.OnStok_ParcaAdetChanging(value);
					this.SendPropertyChanging();
					this._Stok_ParcaAdet = value;
					this.SendPropertyChanged("Stok_ParcaAdet");
					this.OnStok_ParcaAdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_KayıtYapan", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Stok_KayıtYapan
		{
			get
			{
				return this._Stok_KayıtYapan;
			}
			set
			{
				if ((this._Stok_KayıtYapan != value))
				{
					this.OnStok_KayıtYapanChanging(value);
					this.SendPropertyChanging();
					this._Stok_KayıtYapan = value;
					this.SendPropertyChanged("Stok_KayıtYapan");
					this.OnStok_KayıtYapanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok_ModelID", DbType="Int")]
		public System.Nullable<int> Stok_ModelID
		{
			get
			{
				return this._Stok_ModelID;
			}
			set
			{
				if ((this._Stok_ModelID != value))
				{
					if (this._Stok_TelModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStok_ModelIDChanging(value);
					this.SendPropertyChanging();
					this._Stok_ModelID = value;
					this.SendPropertyChanged("Stok_ModelID");
					this.OnStok_ModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_TelModel_Stok_TelParca", Storage="_Stok_TelModel", ThisKey="Stok_ModelID", OtherKey="Stok_ModelID", IsForeignKey=true)]
		public Stok_TelModel Stok_TelModel
		{
			get
			{
				return this._Stok_TelModel.Entity;
			}
			set
			{
				Stok_TelModel previousValue = this._Stok_TelModel.Entity;
				if (((previousValue != value) 
							|| (this._Stok_TelModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stok_TelModel.Entity = null;
						previousValue.Stok_TelParca.Remove(this);
					}
					this._Stok_TelModel.Entity = value;
					if ((value != null))
					{
						value.Stok_TelParca.Add(this);
						this._Stok_ModelID = value.Stok_ModelID;
					}
					else
					{
						this._Stok_ModelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stok_TelModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_PcMarka")]
	public partial class Stok_PcMarka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PcID;
		
		private string _PcMarkaAdi;
		
		private string _PcMarkaKayıtEden;
		
		private EntitySet<Stok_PcModel> _Stok_PcModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPcIDChanging(int value);
    partial void OnPcIDChanged();
    partial void OnPcMarkaAdiChanging(string value);
    partial void OnPcMarkaAdiChanged();
    partial void OnPcMarkaKayıtEdenChanging(string value);
    partial void OnPcMarkaKayıtEdenChanged();
    #endregion
		
		public Stok_PcMarka()
		{
			this._Stok_PcModel = new EntitySet<Stok_PcModel>(new Action<Stok_PcModel>(this.attach_Stok_PcModel), new Action<Stok_PcModel>(this.detach_Stok_PcModel));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PcID
		{
			get
			{
				return this._PcID;
			}
			set
			{
				if ((this._PcID != value))
				{
					this.OnPcIDChanging(value);
					this.SendPropertyChanging();
					this._PcID = value;
					this.SendPropertyChanged("PcID");
					this.OnPcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcMarkaAdi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PcMarkaAdi
		{
			get
			{
				return this._PcMarkaAdi;
			}
			set
			{
				if ((this._PcMarkaAdi != value))
				{
					this.OnPcMarkaAdiChanging(value);
					this.SendPropertyChanging();
					this._PcMarkaAdi = value;
					this.SendPropertyChanged("PcMarkaAdi");
					this.OnPcMarkaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcMarkaKayıtEden", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PcMarkaKayıtEden
		{
			get
			{
				return this._PcMarkaKayıtEden;
			}
			set
			{
				if ((this._PcMarkaKayıtEden != value))
				{
					this.OnPcMarkaKayıtEdenChanging(value);
					this.SendPropertyChanging();
					this._PcMarkaKayıtEden = value;
					this.SendPropertyChanged("PcMarkaKayıtEden");
					this.OnPcMarkaKayıtEdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_PcMarka_Stok_PcModel", Storage="_Stok_PcModel", ThisKey="PcID", OtherKey="PcModelMarkaID")]
		public EntitySet<Stok_PcModel> Stok_PcModel
		{
			get
			{
				return this._Stok_PcModel;
			}
			set
			{
				this._Stok_PcModel.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stok_PcModel(Stok_PcModel entity)
		{
			this.SendPropertyChanging();
			entity.Stok_PcMarka = this;
		}
		
		private void detach_Stok_PcModel(Stok_PcModel entity)
		{
			this.SendPropertyChanging();
			entity.Stok_PcMarka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_PcModel")]
	public partial class Stok_PcModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PcModelID;
		
		private string _PcModelAdi;
		
		private string _PcModelYear;
		
		private string _PcModelKayıtEden;
		
		private System.Nullable<int> _PcModelMarkaID;
		
		private EntitySet<Stok_PcParca> _Stok_PcParca;
		
		private EntityRef<Stok_PcMarka> _Stok_PcMarka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPcModelIDChanging(int value);
    partial void OnPcModelIDChanged();
    partial void OnPcModelAdiChanging(string value);
    partial void OnPcModelAdiChanged();
    partial void OnPcModelYearChanging(string value);
    partial void OnPcModelYearChanged();
    partial void OnPcModelKayıtEdenChanging(string value);
    partial void OnPcModelKayıtEdenChanged();
    partial void OnPcModelMarkaIDChanging(System.Nullable<int> value);
    partial void OnPcModelMarkaIDChanged();
    #endregion
		
		public Stok_PcModel()
		{
			this._Stok_PcParca = new EntitySet<Stok_PcParca>(new Action<Stok_PcParca>(this.attach_Stok_PcParca), new Action<Stok_PcParca>(this.detach_Stok_PcParca));
			this._Stok_PcMarka = default(EntityRef<Stok_PcMarka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PcModelID
		{
			get
			{
				return this._PcModelID;
			}
			set
			{
				if ((this._PcModelID != value))
				{
					this.OnPcModelIDChanging(value);
					this.SendPropertyChanging();
					this._PcModelID = value;
					this.SendPropertyChanged("PcModelID");
					this.OnPcModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcModelAdi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PcModelAdi
		{
			get
			{
				return this._PcModelAdi;
			}
			set
			{
				if ((this._PcModelAdi != value))
				{
					this.OnPcModelAdiChanging(value);
					this.SendPropertyChanging();
					this._PcModelAdi = value;
					this.SendPropertyChanged("PcModelAdi");
					this.OnPcModelAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcModelYear", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PcModelYear
		{
			get
			{
				return this._PcModelYear;
			}
			set
			{
				if ((this._PcModelYear != value))
				{
					this.OnPcModelYearChanging(value);
					this.SendPropertyChanging();
					this._PcModelYear = value;
					this.SendPropertyChanged("PcModelYear");
					this.OnPcModelYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcModelKayıtEden", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PcModelKayıtEden
		{
			get
			{
				return this._PcModelKayıtEden;
			}
			set
			{
				if ((this._PcModelKayıtEden != value))
				{
					this.OnPcModelKayıtEdenChanging(value);
					this.SendPropertyChanging();
					this._PcModelKayıtEden = value;
					this.SendPropertyChanged("PcModelKayıtEden");
					this.OnPcModelKayıtEdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcModelMarkaID", DbType="Int")]
		public System.Nullable<int> PcModelMarkaID
		{
			get
			{
				return this._PcModelMarkaID;
			}
			set
			{
				if ((this._PcModelMarkaID != value))
				{
					if (this._Stok_PcMarka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPcModelMarkaIDChanging(value);
					this.SendPropertyChanging();
					this._PcModelMarkaID = value;
					this.SendPropertyChanged("PcModelMarkaID");
					this.OnPcModelMarkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_PcModel_Stok_PcParca", Storage="_Stok_PcParca", ThisKey="PcModelID", OtherKey="ParcaModelID")]
		public EntitySet<Stok_PcParca> Stok_PcParca
		{
			get
			{
				return this._Stok_PcParca;
			}
			set
			{
				this._Stok_PcParca.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_PcMarka_Stok_PcModel", Storage="_Stok_PcMarka", ThisKey="PcModelMarkaID", OtherKey="PcID", IsForeignKey=true)]
		public Stok_PcMarka Stok_PcMarka
		{
			get
			{
				return this._Stok_PcMarka.Entity;
			}
			set
			{
				Stok_PcMarka previousValue = this._Stok_PcMarka.Entity;
				if (((previousValue != value) 
							|| (this._Stok_PcMarka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stok_PcMarka.Entity = null;
						previousValue.Stok_PcModel.Remove(this);
					}
					this._Stok_PcMarka.Entity = value;
					if ((value != null))
					{
						value.Stok_PcModel.Add(this);
						this._PcModelMarkaID = value.PcID;
					}
					else
					{
						this._PcModelMarkaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stok_PcMarka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stok_PcParca(Stok_PcParca entity)
		{
			this.SendPropertyChanging();
			entity.Stok_PcModel = this;
		}
		
		private void detach_Stok_PcParca(Stok_PcParca entity)
		{
			this.SendPropertyChanging();
			entity.Stok_PcModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stok_PcParca")]
	public partial class Stok_PcParca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParcaID;
		
		private string _ParcaAdi;
		
		private System.Nullable<int> _ParcaAdet;
		
		private string _ParcaKayıtEden;
		
		private System.Nullable<int> _ParcaModelID;
		
		private EntityRef<Stok_PcModel> _Stok_PcModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParcaIDChanging(int value);
    partial void OnParcaIDChanged();
    partial void OnParcaAdiChanging(string value);
    partial void OnParcaAdiChanged();
    partial void OnParcaAdetChanging(System.Nullable<int> value);
    partial void OnParcaAdetChanged();
    partial void OnParcaKayıtEdenChanging(string value);
    partial void OnParcaKayıtEdenChanged();
    partial void OnParcaModelIDChanging(System.Nullable<int> value);
    partial void OnParcaModelIDChanged();
    #endregion
		
		public Stok_PcParca()
		{
			this._Stok_PcModel = default(EntityRef<Stok_PcModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParcaID
		{
			get
			{
				return this._ParcaID;
			}
			set
			{
				if ((this._ParcaID != value))
				{
					this.OnParcaIDChanging(value);
					this.SendPropertyChanging();
					this._ParcaID = value;
					this.SendPropertyChanged("ParcaID");
					this.OnParcaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcaAdi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ParcaAdi
		{
			get
			{
				return this._ParcaAdi;
			}
			set
			{
				if ((this._ParcaAdi != value))
				{
					this.OnParcaAdiChanging(value);
					this.SendPropertyChanging();
					this._ParcaAdi = value;
					this.SendPropertyChanged("ParcaAdi");
					this.OnParcaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcaAdet", DbType="Int")]
		public System.Nullable<int> ParcaAdet
		{
			get
			{
				return this._ParcaAdet;
			}
			set
			{
				if ((this._ParcaAdet != value))
				{
					this.OnParcaAdetChanging(value);
					this.SendPropertyChanging();
					this._ParcaAdet = value;
					this.SendPropertyChanged("ParcaAdet");
					this.OnParcaAdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcaKayıtEden", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ParcaKayıtEden
		{
			get
			{
				return this._ParcaKayıtEden;
			}
			set
			{
				if ((this._ParcaKayıtEden != value))
				{
					this.OnParcaKayıtEdenChanging(value);
					this.SendPropertyChanging();
					this._ParcaKayıtEden = value;
					this.SendPropertyChanged("ParcaKayıtEden");
					this.OnParcaKayıtEdenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcaModelID", DbType="Int")]
		public System.Nullable<int> ParcaModelID
		{
			get
			{
				return this._ParcaModelID;
			}
			set
			{
				if ((this._ParcaModelID != value))
				{
					if (this._Stok_PcModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParcaModelIDChanging(value);
					this.SendPropertyChanging();
					this._ParcaModelID = value;
					this.SendPropertyChanged("ParcaModelID");
					this.OnParcaModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stok_PcModel_Stok_PcParca", Storage="_Stok_PcModel", ThisKey="ParcaModelID", OtherKey="PcModelID", IsForeignKey=true)]
		public Stok_PcModel Stok_PcModel
		{
			get
			{
				return this._Stok_PcModel.Entity;
			}
			set
			{
				Stok_PcModel previousValue = this._Stok_PcModel.Entity;
				if (((previousValue != value) 
							|| (this._Stok_PcModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stok_PcModel.Entity = null;
						previousValue.Stok_PcParca.Remove(this);
					}
					this._Stok_PcModel.Entity = value;
					if ((value != null))
					{
						value.Stok_PcParca.Add(this);
						this._ParcaModelID = value.PcModelID;
					}
					else
					{
						this._ParcaModelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stok_PcModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
